import{_ as s,c as a,o as e,O as o}from"./chunks/framework.d7e37bdc.js";const m=JSON.parse('{"title":"基础","description":"","frontmatter":{},"headers":[],"relativePath":"rust/basic.md","filePath":"rust/basic.md","lastUpdated":1683679870000}'),n={name:"rust/basic.md"},l=o(`<h1 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h1><h2 id="hello-world" tabindex="-1">Hello world <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello world&quot;">​</a></h2><p>不管学习什么语言，第一步都是学习如何输出 <code>hello world</code>，Rust 也不例外。</p><p>首先将如下内容放入到 <code>hello.rs</code> 中。</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>跟 C 语言一样，这里也需要定义 <code>main</code> 为入口函数名。</p><p><code>fn</code> 用来定义这是一个函数。<code>()</code> 中用于定义参数。函数的具体处理放在 <code>{}</code> 中。返回值放在 <code>) {</code> 位置中。</p><p><code>println!</code> 表示调用的是 Rust 宏（macro）。如果是调用函数，则为 <code>println</code>。</p>`,8),t=[l];function c(p,r,d,i,u,_){return e(),a("div",null,t)}const D=s(n,[["render",c]]);export{m as __pageData,D as default};
