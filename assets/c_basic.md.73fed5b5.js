import{_ as s,c as a,o as n,a as e}from"./app.3837ada1.js";const y=JSON.parse('{"title":"基础概念","description":"","frontmatter":{},"headers":[{"level":2,"title":"Hello world","slug":"hello-world","link":"#hello-world","children":[]},{"level":2,"title":"编译运行","slug":"编译运行","link":"#编译运行","children":[]}],"relativePath":"c/basic.md","lastUpdated":1674958142000}'),l={name:"c/basic.md"},o=e(`<h1 id="基础概念" tabindex="-1">基础概念 <a class="header-anchor" href="#基础概念" aria-hidden="true">#</a></h1><h2 id="hello-world" tabindex="-1"><code>Hello world</code> <a class="header-anchor" href="#hello-world" aria-hidden="true">#</a></h2><p>首先编写一个基础的 C 语言程序：</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello world</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>第 1 行 <code>#include &lt;stdio.h&gt;</code> 表示加载标准库 <code>stdio.h</code>。</p><p>第 3 行 <code>int main(void)</code> 定义了函数。 函数名是 <code>main</code>，该函数是程序的入口函数。 <code>int</code> 表示函数的返回值，必须是 <code>int</code> 类型。 <code>(void)</code> 是函数的输入值。<code>void</code> 表示不需要任何参数。</p><p>第 5 行是调用的函数 <code>printf</code> 是从第一行的 <code>stdio.h</code> 中引入的。该表示表示打印值。</p><p>第 6 行 <code>return</code> 表示函数返回。这里返回的是 <code>0</code>。表示运行正常。</p><p>一个最简单的 C 函数就是如此。</p><h2 id="编译运行" tabindex="-1">编译运行 <a class="header-anchor" href="#编译运行" aria-hidden="true">#</a></h2>`,10),p=[o];function c(t,r,d,i,h,F){return n(),a("div",null,p)}const u=s(l,[["render",c]]);export{y as __pageData,u as default};
